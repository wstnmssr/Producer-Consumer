This package includes:

ProducerConsumer.java [This is the driver that creates instances of the classes and runs them to completion]

Producer.java [The producer is responsible for producing data items to be added to the buffer. If the buffer is full, the producer must wait for the consumer to consume at least one item before it can add a new item to the buffer. The producer is required to produce a total of 1,000,000 items.The item that the producer adds to the buffer is a random Double that is generated using java.util.Random.]

Consumer.java [The consumer is responsible for consuming elements from the buffer. If the buffer is empty the consumer must wait for the producer to add an item to the buffer. The consumer is required to consume all elements (1,000,000) generated by the producer.]

Buffer.java [This buffer can hold a fixed number of items. The number of elements in this buffer is limited to 1000. This buffer needs to be a first-in first-out (FIFO) buffer. You should implement this as a Circular Buffer that satisfies the FIFO property and is restricted to hold at most 1000 items at a time. ]

To compile:
	make 

To run:
	java ProducerConsumer
